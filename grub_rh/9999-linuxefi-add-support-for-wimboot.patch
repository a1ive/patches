From 90cfcf4ac873e287bf66437ee63956332d6f6a4c Mon Sep 17 00:00:00 2001
From: Fedora Ninjas <grub2-owner@fedoraproject.org>
Date: Sun, 8 Mar 2020 17:40:04 +0800
Subject: [PATCH] linuxefi: add support for wimboot

---
 grub-core/loader/i386/efi/linux.c | 51 +++++++------------------------
 1 file changed, 11 insertions(+), 40 deletions(-)

diff --git a/grub-core/loader/i386/efi/linux.c b/grub-core/loader/i386/efi/linux.c
index 918b662..982033b 100644
--- a/grub-core/loader/i386/efi/linux.c
+++ b/grub-core/loader/i386/efi/linux.c
@@ -24,6 +24,7 @@
 #include <grub/cpu/linux.h>
 #include <grub/command.h>
 #include <grub/i18n.h>
+#include <grub/linux.h>
 #include <grub/lib/cmdline.h>
 #include <grub/efi/efi.h>
 #include <grub/efi/linux.h>
@@ -78,10 +79,8 @@ static grub_err_t
 grub_cmd_initrd (grub_command_t cmd __attribute__ ((unused)),
                  int argc, char *argv[])
 {
-  grub_file_t *files = 0;
-  int i, nfiles = 0;
-  grub_size_t size = 0;
-  grub_uint8_t *ptr;
+  grub_size_t size = 0, unaligned_size = 0;
+  struct grub_linux_initrd_context initrd_ctx = { 0, 0, 0 };
 
   if (argc == 0)
     {
@@ -95,19 +94,11 @@ grub_cmd_initrd (grub_command_t cmd __attribute__ ((unused)),
       goto fail;
     }
 
-  files = grub_zalloc (argc * sizeof (files[0]));
-  if (!files)
+  if (grub_initrd_init (argc, argv, &initrd_ctx))
     goto fail;
 
-  for (i = 0; i < argc; i++)
-    {
-      grub_file_filter_disable_compression ();
-      files[i] = grub_file_open (argv[i]);
-      if (! files[i])
-        goto fail;
-      nfiles++;
-      size += ALIGN_UP (grub_file_size (files[i]), 4);
-    }
+  unaligned_size = grub_get_initrd_size (&initrd_ctx);
+  size = ALIGN_UP (unaligned_size, 4096);
 
   initrd_mem = grub_efi_allocate_pages_max (GRUB_EFI_MAX_ALLOCATION_ADDRESS, BYTES_TO_PAGES(size));
   if (!initrd_mem)
@@ -118,36 +109,16 @@ grub_cmd_initrd (grub_command_t cmd __attribute__ ((unused)),
       goto fail;
     }
 
+  if (grub_initrd_load (&initrd_ctx, argv, initrd_mem))
+    goto fail;
+
   grub_dprintf ("linux", "initrd_mem = %lx\n", (unsigned long) initrd_mem);
 
   params->ramdisk_size = size;
   params->ramdisk_image = (grub_uint32_t)(grub_addr_t) initrd_mem;
 
-  ptr = initrd_mem;
-
-  for (i = 0; i < nfiles; i++)
-    {
-      grub_ssize_t cursize = grub_file_size (files[i]);
-      if (grub_file_read (files[i], ptr, cursize) != cursize)
-        {
-          if (!grub_errno)
-            grub_error (GRUB_ERR_FILE_READ_ERROR, N_("premature end of file %s"),
-                        argv[i]);
-          goto fail;
-        }
-      grub_tpm_measure (ptr, cursize, GRUB_BINARY_PCR, "grub_linuxefi", "Initrd");
-      grub_print_error();
-      ptr += cursize;
-      grub_memset (ptr, 0, ALIGN_UP_OVERHEAD (cursize, 4));
-      ptr += ALIGN_UP_OVERHEAD (cursize, 4);
-    }
-
-  params->ramdisk_size = size;
-
- fail:
-  for (i = 0; i < nfiles; i++)
-    grub_file_close (files[i]);
-  grub_free (files);
+fail:
+  grub_initrd_close (&initrd_ctx);
 
   if (initrd_mem && grub_errno)
     grub_efi_free_pages ((grub_efi_physical_address_t)(grub_addr_t)initrd_mem,
-- 
2.25.1

